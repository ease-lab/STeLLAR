# MIT License
#
# Copyright (c) 2021 Theodor Amariucai
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Build function images

concurrency: staging_environment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 6'

jobs:

  producer_consumer_common_identical:
    name: Verify that producer-consumer aws/vhive common modules are identical
    runs-on: ubuntu-18.04
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Check that modules `common` are identical
        working-directory: ./src/setup/deployment/raw-code/functions/producer-consumer
        run: if diff -bur ./vhive/common/ ./aws/common/ | grep '^'; then   exit 1; else   exit 0; fi

      - name: Check that modules `proto_gen` are identical
        working-directory: ./src/setup/deployment/raw-code/functions/producer-consumer
        run: if diff -bur ./vhive/proto_gen/ ./aws/proto_gen/ | grep '^'; then   exit 1; else   exit 0; fi

  build_images:
    name: Build function images
    needs: producer_consumer_common_identical
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        platform: [ aws, vhive ]
        function: [ producer-consumer, chameleon, hellopy, rnnserving ]
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: producer-consumer (build and push)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./src/setup/deployment/raw-code/functions/${{ matrix.function }}/${{ matrix.platform }}/
          file: ./src/setup/deployment/raw-code/functions/${{ matrix.function }}/${{ matrix.platform }}/Dockerfile
          push: ${{ matrix.platform == 'vhive' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.function }}:latest
