# MIT License
#
# Copyright (c) 2021 Theodor Amariucai
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: vHive-bench Pipeline
    runs-on: ubuntu-18.04
    env:
      working-directory: ./src
    steps:
    
    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
        
    - name: Check Syntax
      uses: Jerome1337/golint-action@v1.0.2

    - name: Build client
      working-directory: ${{env.working-directory}}
      run: |
        mkdir -p "../latency-samples"
        docker build -t vhive-bench .
        docker create --name temp vhive-bench /bin/bash
        docker cp temp:/app/vhive-bench ./main
        docker cp temp:/app/setup/deployment/raw-code/producer-consumer/go1.x/aws/handler setup/deployment/raw-code/producer-consumer/go1.x/aws/handler
        docker cp temp:/app/setup/deployment/raw-code/producer-consumer/go1.x/vhive/handler setup/deployment/raw-code/producer-consumer/go1.x/vhive/handler
      
    - name: Configure AWS credentials using EASE lab account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1
        
    - name: Check that aws producer-consumer function image builds
      working-directory: ${{env.working-directory}}/setup/deployment/raw-code/producer-consumer/go1.x/aws/
      run: |
        touch random.file
        docker build -t vhive-bench:aws .
        
    - name: Check that vhive producer-consumer function image builds
      working-directory: ${{env.working-directory}}/setup/deployment/raw-code/producer-consumer/go1.x/aws/
      run: |
        touch random.file
        docker build -t vhive-bench:vhive .
        
    - name: Unit Tests
      working-directory: ${{env.working-directory}}
      run: go test -short -v ./...

    - name: AWS Burstiness ZIP Package (Integration Test)
      working-directory: ${{env.working-directory}}
      run: ./main --o "../latency-samples" --c "../experiments/tests/aws/burstiness-zip-package.json"

    - name: AWS Burstiness Image Package (Integration Test)
      working-directory: ${{env.working-directory}}
      run: ./main --o "../latency-samples" --c "../experiments/tests/aws/burstiness-image-package.json"

    - name: AWS Inline Data Transfer Integration (Integration Test)
      working-directory: ${{env.working-directory}}
      run: ./main --o "../latency-samples" --c "../experiments/tests/aws/data-transfer.json"
      
    - name: Prepare files for pushing to deployment branch
      run: |
        cp src/main main
        mkdir -p setup/deployment/raw-code/producer-consumer/go1.x/vhive/
        cp src/setup/deployment/raw-code/producer-consumer/go1.x/vhive/handler setup/deployment/raw-code/producer-consumer/go1.x/vhive/handler
        mkdir -p setup/deployment/raw-code/producer-consumer/go1.x/aws/
        cp src/setup/deployment/raw-code/producer-consumer/go1.x/aws/handler setup/deployment/raw-code/producer-consumer/go1.x/aws/handler
        cp src/setup/deployment/raw-code/producer-consumer/go1.x/aws/dockerfile setup/deployment/raw-code/producer-consumer/go1.x/aws/dockerfile
        cp src/setup/deployment/raw-code/producer-consumer/api-template.json setup/deployment/raw-code/producer-consumer/api-template.json

    - name: vHive Inline Data Transfer Integration (Integration Test)
      working-directory: ${{env.working-directory}}
      run: |
        cat > ../endpoints/vHive.json <<- EOM
        [
        {
            "GatewayID": "172.18.0.2:50051",
            "FunctionMemoryMB": 128,
            "ImageSizeMB": 60,
            "PackageType": "Image"
        },
        {
            "GatewayID": "172.18.0.3:50051",
            "FunctionMemoryMB": 128,
            "ImageSizeMB": 60,
            "PackageType": "Image"
        }
        ]
        EOM
        docker network create --subnet=172.18.0.0/16 benchnet
        docker run -d --net=benchnet --ip 172.18.0.2 vhiveease/vhive-bench:latest
        docker run -d --net=benchnet --ip 172.18.0.3 vhiveease/vhive-bench:latest
        ./main -g ../endpoints -o ../latency-samples -c ../experiments/tests/vhive/data-transfer.json

    - name: Push to deployment branch
      run: |
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config user.name "vHive Bench Bot"
        git remote set-url origin https://ease-lab:${{secrets.ACCESS_TOKEN}}@github.com/ease-lab/vhive-bench.git
        git checkout --orphan deployment
        git rm -rf --ignore-unmatch --cached .
        git add -f initialize_aws.sh initialize_machine.sh endpoints experiments main \
        setup/deployment/raw-code/producer-consumer/go1.x/aws/handler \
        setup/deployment/raw-code/producer-consumer/go1.x/aws/dockerfile \
        setup/deployment/raw-code/producer-consumer/go1.x/vhive/handler \
        setup/deployment/raw-code/producer-consumer/api-template.json
        git commit -m "Automated push from successful vhive-bench pipeline"
        git push origin HEAD:deployment --force
