name: Image size experiment

on:
  workflow_dispatch:
  push:
    branches:
      - ypwong99/temp-experiment-image-sizes

jobs:
  build_client:
    name: Build framework
    runs-on: ubuntu-latest
    env:
      working-directory: ./src
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ypwong99/temp-experiment-image-sizes

      - name: Set up Go 1.21
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build client binary
        working-directory: ${{ env.working-directory }}
        run: env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o stellar main.go

      - name: Package client artifact
        working-directory: ${{ env.working-directory }}
        run: tar -czvf build.tar ./stellar

      - name: Upload client artifact
        uses: actions/upload-artifact@v3
        with:
          name: STeLLAR-build
          path: ${{ env.working-directory }}/build.tar
          retention-days: 1

  cold-image-size-100-gcr-read-per-page:
    name: GCR 100MB image size experiment (read-per-page)
    needs: build_client
    runs-on: [ self-hosted, gcr ]
    timeout-minutes: 600
    env:
      working-directory: src
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ypwong99/temp-experiment-image-sizes

      - id: auth
        name: Configure GCR credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"

      - name: Set up Node 16.16.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: STeLLAR-build

      - name: Untar client build
        working-directory: ${{ env.working-directory }}
        run: tar --strip-components=1 -xvf ../build.tar -C .

      - name: Run experiment
        working-directory: ${{ env.working-directory }}
        run: ./stellar -c ../experiments/image-size/cold-image-size-100-gcr-read-per-page.json

      - uses: actions/upload-artifact@v3
        with:
          name: cold-image-size-100-gcr-read-per-page
          path: ${{ env.working-directory }}/latency-samples

  cold-image-size-100-gcr-read-per-2048-bytes:
    name: GCR 100MB image size experiment (read-per-2048-bytes)
    needs: build_client
    runs-on: [ self-hosted, gcr ]
    timeout-minutes: 600
    env:
      working-directory: src
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ypwong99/temp-experiment-image-sizes

      - id: auth
        name: Configure GCR credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"

      - name: Set up Node 16.16.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: STeLLAR-build

      - name: Untar client build
        working-directory: ${{ env.working-directory }}
        run: tar --strip-components=1 -xvf ../build.tar -C .

      - name: Run experiment
        working-directory: ${{ env.working-directory }}
        run: ./stellar -c ../experiments/image-size/cold-image-size-100-gcr-read-per-2048-bytes.json

      - uses: actions/upload-artifact@v3
        with:
          name: cold-image-size-100-gcr-read-per-2048-bytes
          path: ${{ env.working-directory }}/latency-samples

  cold-image-size-100-gcr-read-per-8192-bytes:
    name: GCR 100MB image size experiment (read-per-8192-bytes)
    needs: build_client
    runs-on: [ self-hosted, gcr ]
    timeout-minutes: 600
    env:
      working-directory: src
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ypwong99/temp-experiment-image-sizes

      - id: auth
        name: Configure GCR credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"

      - name: Set up Node 16.16.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: STeLLAR-build

      - name: Untar client build
        working-directory: ${{ env.working-directory }}
        run: tar --strip-components=1 -xvf ../build.tar -C .

      - name: Run experiment
        working-directory: ${{ env.working-directory }}
        run: ./stellar -c ../experiments/image-size/cold-image-size-100-gcr-read-per-8192-bytes.json

      - uses: actions/upload-artifact@v3
        with:
          name: cold-image-size-100-gcr-read-per-8192-bytes
          path: ${{ env.working-directory }}/latency-samples
