name: Run CPU Boost Experiments (GCR)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_client:
    name: Build framework
    runs-on: ubuntu-latest
    env:
      working-directory: ./src
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: cpuboost-exp

      - name: Set up Go 1.21
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build client binary
        working-directory: ${{env.working-directory}}
        run: env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o stellar main.go

      - name: Package client artifact
        working-directory: ${{env.working-directory}}
        run: tar -czvf build.tar ./stellar

      - name: Upload client artifact
        uses: actions/upload-artifact@v3
        with:
          name: STeLLAR-build
          path: ${{env.working-directory}}/build.tar
          retention-days: 1

  cold-gcr-normal:
    name: GCR Cold Runtime Experiments (Normal)
    needs: build_client
    runs-on: [ self-hosted, gcr ]
    strategy:
      matrix:
        runtime:
          [
            go,
            py,
            node,
            java,
          ]
    env:
      working-directory: ./src
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: cpuboost-exp

      - name: Set up Go 1.21
        if: ${{ matrix.runtime == 'go'}}
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Set up Java11
        if: ${{ matrix.runtime == 'java' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Gradle
        if: ${{ matrix.runtime == 'java'}}
        uses: gradle/gradle-build-action@v2

      - id: auth
        name: Configure GCR credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: STeLLAR-build

      - name: Untar client build
        working-directory: ${{ env.working-directory }}
        run: tar --strip-components=1 -xvf ../build.tar -C .

      - name: GCR Runtime ${{ matrix.runtime }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 1440
          max_attempts: 5
          retry_wait_seconds: 60
          command: cd src && ./stellar -o latency-samples-gcr -l debug -c ../experiments/tests/gcr/cold-hello${{ matrix.runtime }}-img-gcr.json

      - uses: actions/upload-artifact@v3
        with:
          name: cold-hello${{ matrix.runtime }}-img-gcr
          path: ${{ env.working-directory }}/latency-samples-gcr

  cold-gcr-boosted:
    name: GCR Cold Runtime Experiments (CPU Boosted)
    needs: build_client
    runs-on: [ self-hosted, gcr ]
    strategy:
      matrix:
        runtime:
          [
            go,
            py,
            node,
            java,
          ]
    env:
      working-directory: ./src
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: cpuboost-exp

      - name: Set up Go 1.21
        if: ${{ matrix.runtime == 'go'}}
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Set up Java11
        if: ${{ matrix.runtime == 'java' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Gradle
        if: ${{ matrix.runtime == 'java'}}
        uses: gradle/gradle-build-action@v2

      - id: auth
        name: Configure GCR credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: STeLLAR-build

      - name: Untar client build
        working-directory: ${{ env.working-directory }}
        run: tar --strip-components=1 -xvf ../build.tar -C .

      - name: GCR Runtime ${{ matrix.runtime }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 1440
          max_attempts: 5
          retry_wait_seconds: 60
          command: cd src && ./stellar -o latency-samples-gcr -l debug -c ../experiments/tests/gcr/cold-hello${{ matrix.runtime }}-img-gcr-boosted.json

      - uses: actions/upload-artifact@v3
        with:
          name: cold-hello${{ matrix.runtime }}-img-gcr-boosted
          path: ${{ env.working-directory }}/latency-samples-gcr
