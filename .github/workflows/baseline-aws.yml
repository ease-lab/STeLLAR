name: Continuous benchmarking - Baseline experiments - AWS

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 0 * * 1"

jobs:
  build_client:
    name: Build framework
    runs-on: ubuntu-latest
    env:
      working-directory: ./src
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: continuous-benchmarking

      - name: Set up Go 1.21
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Build client binary
        working-directory: ${{ env.working-directory }}
        run: env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o stellar main.go

      - name: Package client artifact
        working-directory: ${{ env.working-directory }}
        run: tar -czvf build.tar ./stellar

      - name: Upload client artifact
        uses: actions/upload-artifact@v3
        with:
          name: STeLLAR-build
          path: ${{ env.working-directory }}/build.tar
          retention-days: 1

  warm-baseline-aws:
    name: AWS warm baseline experiment
    needs: build_client
    runs-on: [ self-hosted, aws ]
    timeout-minutes: 1200
    env:
      working-directory: src
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

    steps:
      - name: "Cleanup build folder"
        run: |
          sudo rm -rf ./* || true
          sudo rm -rf ./.??* || true

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: continuous-benchmarking

      - name: Configure AWS credentials using EASE lab account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-west-1

      # - name: Set up Node.js 16.16.0
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16.16.0
      
      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with: 
          node-version: 18
          
      - name: Install Serverless framework and related plugins
        run: npm install -g serverless@3.38.0 serverless-azure-functions functions-have-names

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: STeLLAR-build

      - name: Untar client build
        working-directory: ${{ env.working-directory }}
        run: tar --strip-components=1 -xvf ../build.tar -C .

      - name: AWS Warm Function Invocation - Baseline
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 1440
          max_attempts: 5
          retry_wait_seconds: 60
          command: cd src && ./stellar -a 356764711652 -o latency-samples -c ../continuous-benchmarking/experiments/warm-function-invocations/warm-baseline-aws.json -db -w

      - uses: actions/upload-artifact@v3
        with:
          name: warm-baseline-aws
          path: ${{ env.working-directory }}/latency-samples

      - name: Add zero'ed data (Failed experiment)
        if: ${{ failure() }}
        env: 
          DATA_INSERT_URL: ${{ secrets.DATA_INSERT_URL}}
        run: |
          curl -XPOST -H "Content-type: application/json" -d '{"experiment_type":"warm-baseline-aws","date":"'$(date +%F)'","min":"0","max":"0","median":"0","tail_latency":"0","first_quartile":"0","third_quartile":"0","standard_deviation":"0","payload_size":"0","burst_size":"0","IATType":"0","count":"0","provider":"aws"}' $DATA_INSERT_URL

      - name: Send Slack message using Incoming Webhooks
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Scheduled experiment (Job status)"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow Name*: ${{ github.workflow }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job Name*: ${{ github.job }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job Status*: ${{ job.status }} ‚ùå"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "<!channel>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

